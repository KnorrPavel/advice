<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.logicify.advice</groupId>
    <artifactId>advice-parent</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>Advice Web Service Parent</name>
    <description>
        TODO: write desc
    </description>

    <modules>
        <module>advice-domain</module>
        <module>advice-bl</module>
    </modules>

    <properties>
        <spring.version>3.1.1.RELEASE</spring.version>

        <wicket.version>1.5.7</wicket.version>
        <jetty.version>6.1.26</jetty.version>
        <!--<hibernate.version>4.1.7.Final</hibernate.version>-->
        <!--<spring.security.version>3.1.0.RELEASE</spring.security.version>-->

        <build.filter.file>build.local.properties</build.filter.file>
    </properties>

    <build>
        <filters>
            <filter>${project.basedir}/../properties/${build.filter.file}</filter>
        </filters>
        <pluginManagement>
            <plugins>
                <plugin>
                    <inherited>true</inherited>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.3.2</version>
                    <configuration>
                        <source>1.7</source>
                        <target>1.7</target>
                        <optimize>true</optimize>
                        <debug>true</debug>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.0.2</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>1.3.1</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependency-updates-report</report>
                            <report>plugin-updates-report</report>
                            <report>property-updates-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <dependencyManagement>

        <dependencies>

            <!-- DATABASE DRIVERS -->

            <!--PostgreSQL driver-->
            <dependency>
                <groupId>postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>9.1-901-1.jdbc4</version>
            </dependency>

            <!--MongoDB driver-->
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongo-java-driver</artifactId>
                <version>2.9.1</version>
            </dependency>


            <!-- Spring data bindings-->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-jpa</artifactId>
                <version>1.1.2.RELEASE</version>
            </dependency>


            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-mongodb</artifactId>
                <version>1.0.4.RELEASE</version>
            </dependency>


            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>persistence-api</artifactId>
                <version>1.0.2</version>
            </dependency>

            <!--SPRING DEPENDENCIES-->
            <!--Core utilities used by other modules.Define this if you use Spring Utility APIs
            (org.springframework.core.*/org.springframework.util.*)-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Expression Language (depends on spring-core) Define this if you use Spring Expression APIs
            (org.springframework.expression.*)-->
            <!--
                        <dependency>
                            <groupId>org.springframework</groupId>
                            <artifactId>spring-expression</artifactId>
                            <version>${spring.version}</version>
                        </dependency>
            -->
            <!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define this if you use Spring Bean APIs
           (org.springframework.beans.*) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!--Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans) This is the
central artifact for Spring's Dependency Injection Container and is generally always defined -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!--Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
   Define this if you need any of these integrations -->
<!--
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
-->
            <!-- Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
              Define this if you use Spring Transactions or DAO Exception Hierarchy (org.springframework.transaction.
           */org.springframework.dao.*) -->
<!--
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>
-->
            <!--Spring web integration-->
<!--            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>-->
            <!--Spring ORM support-->
<!--            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>-->
            <!--Spring security-->
<!--            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-core</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-acl</artifactId>
                <version>${spring.security.version}</version>
            </dependency>-->

            <!-- Spring AOP + AspectJ -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>1.6.12</version>
            </dependency>

            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>1.6.12</version>
            </dependency>

            <!-- Cache for spring -->
            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache</artifactId>
                <version>2.5.2</version>
                <type>pom</type>
            </dependency>

            <!-- Support for testing Spring applications with tools such as JUnit and TestNG This artifact is generally
always defined with a 'test' scope for the integration testing framework and unit testing stubs-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- LOGGING DEPENDENCIES - LOG4J -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>1.6.6</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
            </dependency>

            <!-- APACHE COMMONS-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.1</version>
            </dependency>


            <!-- WICKET -->
            <dependency>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-core</artifactId>
                <version>${wicket.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-auth-roles</artifactId>
                <version>${wicket.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-ioc</artifactId>
                <version>${wicket.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-spring</artifactId>
                <version>${wicket.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-devutils</artifactId>
                <version>${wicket.version}</version>
            </dependency>


            <!--======================================-->
            <!--           TESTING                    -->
            <!--======================================-->

            <!--  JETTY DEPENDENCIES FOR TESTING  -->
            <dependency>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty</artifactId>
                <version>${jetty.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-util</artifactId>
                <version>${jetty.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-management</artifactId>
                <version>${jetty.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>0.9.8</version>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <dependencies>
        <!-- LOGGING DEPENDENCIES - LOG4J -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>

        <dependency>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.12.1.GA</version>
        </dependency>

        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.2.2</version>
        </dependency>

        <!--======================================-->
        <!--           TESTING                    -->
        <!--======================================-->
        <!--Junit-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>

        <!--  JETTY DEPENDENCIES FOR TESTING  -->
        <!--Unfortunately, due to the way Maven dependencies work and due to-->
        <!--http://jira.codehaus.org/browse/MNG-1378 the only way to inherit test-->
        <!--dependencies is to put them to the parent.-->
        <!--This means that Jetty will be in test classpath of the modules not directly related-->
        <!--to the web, which is (small) issue.-->
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-management</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--Mockito - mocking framework for TDD-->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.9.5-rc1</version>
            <scope>test</scope>
        </dependency>
        <!--FEST-assert for testing. -->
        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert</artifactId>
            <version>1.4</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <id>download-java-net</id>
            <url>http://download.java.net/maven/2/</url>
        </repository>
    </repositories>
</project>